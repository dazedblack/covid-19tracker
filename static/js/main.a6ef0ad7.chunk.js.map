{"version":3,"sources":["Components/MainPage.jsx","Components/PieChart.jsx","Components/LineChart.jsx","Components/CustomLineChart.jsx","axios.js","App.jsx","index.js"],"names":["MainPage","props","confirmedData","recoveredData","deathData","text","className","Card","bg","Body","Title","Text","Footer","PieChart","defaults","global","tooltips","enabled","scale","gridLines","display","sickPeople","data","labels","datasets","backgroundColor","height","width","options","maintainAspectRatio","scaleShowGridLines","scaleShowVerticalLines","cutoutPercentage","LineChart","label","scales","xAxes","ticks","beginAtZero","yAxes","CustomLineChart","head","fill","lineTension","borderColor","headColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","axiosInstance","axios","create","baseURL","App","useState","totalConfirmed","setTotalConfirmed","totalRecovered","setTotalRecovered","totalDeaths","setTotalDeaths","loading","setLoading","newConfirmed","setNewConfirmed","newRecovered","setNewRecovered","newDeaths","setNewDeaths","coronaCountAr","setCoronaCountAr","coronaRecoveredAr","setCoronaRecoveredAr","coronaDeathAr","setCoronaDeathAr","coronaActiveAr","setCoronaActiveAr","days","useEffect","get","then","res","status","turkey","Countries","TotalConfirmed","TotalRecovered","TotalDeaths","NewConfirmed","NewRecovered","NewDeaths","catch","error","console","log","yAxisCoronaCount","map","d","Confirmed","yAxisRecoveredCount","Recovered","yAxisDeathCount","Deaths","yAxisActiveCount","Active","style","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6ef0ad7.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\"\r\n\r\nconst MainPage = (props) => {\r\n\r\n\r\n    const confirmedData = props.confirmedData\r\n    const recoveredData = props.recoveredData\r\n    const deathData = props.deathData\r\n    const text = props.text\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <Card bg=\"primary\" text=\"white\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"d-flex justify-content-center\">{`${text} Cases`}</Card.Title>\r\n                            <Card.Text className=\"d-flex justify-content-center values\">{confirmedData}</Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text\"></Card.Footer>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Card bg=\"success\" text=\"white\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"d-flex justify-content-center\">{`${text} Recover`}</Card.Title>\r\n                            <Card.Text className=\"d-flex justify-content-center values\">{recoveredData}</Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text\"></Card.Footer>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <Card bg=\"danger\" text=\"white\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"d-flex justify-content-center\">{`${text} Deaths`}</Card.Title>\r\n                            <Card.Text className=\"d-flex justify-content-center values\">{deathData}</Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer className=\"text\"></Card.Footer>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React from 'react'\r\nimport {Pie, defaults} from \"react-chartjs-2\"\r\n\r\nfunction PieChart(props) {\r\n\r\n    defaults.global.tooltips.enabled = true;\r\ndefaults.scale.gridLines.display = false;\r\n\r\nconst confirmedData = props.confirmedData\r\nconst recoveredData = props.recoveredData\r\nconst deathData = props.deathData\r\n\r\n    const sickPeople = confirmedData - (recoveredData + deathData)\r\n\r\n    return (\r\n        <div>\r\n             <Pie\r\n                data={{\r\n                    labels: [\"Total Recovered\", \"Total Deaths\", \"Total Sick\"],\r\n                    datasets: [{\r\n                        data: [recoveredData,deathData,  sickPeople],\r\n                        backgroundColor: [\r\n                            \"rgba(6, 128, 0, 0.7)\",\r\n                            'rgba(163, 0, 8, 0.7)',\r\n                            \"rgba(185, 191, 4, .7)\"\r\n                        ],\r\n\r\n                    }]\r\n                }}\r\n                height={390}\r\n                width={390}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scaleShowGridLines : false,\r\n                  scaleShowVerticalLines: false,\r\n                  cutoutPercentage: 0\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PieChart\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nfunction LineChart(props) {\r\n\r\n    const confirmedData = props.confirmedData\r\n    const recoveredData = props.recoveredData\r\n    const deathData = props.deathData\r\n\r\n    return (\r\n        <div>\r\n            <Line\r\n                data={{\r\n                    datasets: [\r\n                        {\r\n                            label: [\"Total Death\"],\r\n                            data: [0, deathData],\r\n                            backgroundColor: 'rgba(201, 6, 35, 1)',\r\n                        },\r\n                        {\r\n                            label: \"Total Recovered\",\r\n                            data: [0, recoveredData],\r\n                            backgroundColor: 'rgba(15, 191, 39, .8)',\r\n                        },\r\n                        {\r\n                            label: \"Confirmed\",\r\n                            data: [0, confirmedData],\r\n                            backgroundColor: \"rgba(70, 50, 168, 1)\",\r\n                        },\r\n                        \r\n                    ],\r\n                }}\r\n\r\n                height={390}\r\n                width={390}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scaleShowGridLines: false,\r\n                    scaleShowVerticalLines: false,\r\n                    cutoutPercentage: 0,\r\n                    scales: {\r\n                        xAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }],\r\n\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n\r\n                }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\"\r\n\r\nfunction CustomLineChart(props) {\r\n\r\n    const data = {\r\n        labels: ['Day1', 'Day2', 'Day3', 'Day4', 'Day5', 'Day6', 'Day7'],\r\n        datasets: [\r\n            {\r\n                label: props.head,\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: props.headColor,\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                maintainAspectRatio: false,\r\n                scaleShowGridLines: false,\r\n                scaleShowVerticalLines: false,\r\n                cutoutPercentage: 0,\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: props.headColor,\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: props.headColor,\r\n                width: 390,\r\n                height: 500,\r\n                pointHoverBorderColor: props.headColor,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 6,\r\n                pointHitRadius: 20,\r\n                data: props.data,\r\n                beginAtZero: true\r\n            }\r\n        ]\r\n    };\r\n\r\n    const options = {\r\n       \r\n        scales: {\r\n            yAxes: [{\r\n              ticks: {\r\n                beginAtZero: false,\r\n              }    \r\n            }]\r\n          }\r\n        };\r\n\r\n    return (\r\n        <>\r\n            <Line data={data}\r\n            options={options}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomLineChart\r\n","import axios from \"axios\"\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `https://api.covid19api.com/`\r\n})\r\n\r\nexport default axiosInstance;","import React from 'react'\r\nimport MainPage from \"./Components/MainPage\"\r\nimport PieChart from \"./Components/PieChart\"\r\nimport LineChart from \"./Components/LineChart\"\r\nimport CustomLineChart from \"./Components/CustomLineChart\"\r\nimport './style.css'\r\nimport axios from \"./axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport default function App() {\r\n\r\n    const [totalConfirmed, setTotalConfirmed] = useState(0)\r\n    const [totalRecovered, setTotalRecovered] = useState(0)\r\n    const [totalDeaths, setTotalDeaths] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [newConfirmed, setNewConfirmed] = useState(0)\r\n    const [newRecovered, setNewRecovered] = useState(0)\r\n    const [newDeaths, setNewDeaths] = useState(0)\r\n    const [coronaCountAr, setCoronaCountAr] = useState([])\r\n    const [coronaRecoveredAr, setCoronaRecoveredAr] = useState([])\r\n    const [coronaDeathAr, setCoronaDeathAr] = useState([])\r\n    const [coronaActiveAr, setCoronaActiveAr] = useState([])\r\n    const [days] = useState(7)\r\n\r\n\r\n    const cases = \"Last 7 Day Cases\"\r\n    const casesColor = \"rgb(116, 116, 220)\"\r\n\r\n    const alltime = \"All Time's\"\r\n    const today = \"Today's\"\r\n\r\n    const recoverd = \"Last 7 Day Recovered\"\r\n    const recoverdCol = \"rgb(140, 220, 116)\"\r\n\r\n    const death = \"Last 7 Day Death\"\r\n    const deathCol = \"rgb(233, 57, 57)\"\r\n\r\n    const active = \"Last 7 Day Active\"\r\n    const activeCol = \"rgb(233, 233, 57)\"\r\n\r\n    /*  const getCoronaReportByDate = () => {\r\n          //axios.get(`country/turkey?from=${from}T00:00:00Z&to=${to}T00:00:00Z`) - statik olarak aldım çünkü data yoktu.\r\n          axios.get(`country/turkey?from=2020-12-26T00:00:00Z&to=2021-01-05T00:00:00Z`)\r\n          .then(res=> {\r\n              const yAxisCoronaCount = res.data.map(d => d.Confirmed)\r\n              setCoronaCountAr(yAxisCoronaCount)\r\n              \r\n          })\r\n          .catch(error => {\r\n              console.log(error)\r\n          })\r\n      } */\r\n\r\n\r\n    /* const formatDate = (date) => {\r\n         const d = new Date(date);\r\n         const year = d.getFullYear();\r\n         const month = `0${d.getMonth() +1}`.slice(-2)\r\n         const _date = d.getDate();\r\n         return `${year}-${month}-${_date}` \r\n     }\r\n \r\n     const d = new Date();\r\n     const to = formatDate(d);\r\n     const from = formatDate(d.setDate(d.getDate() - 7)) */\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);\r\n        axios.get(`/summary`)\r\n            .then(res => {\r\n                setLoading(false)\r\n\r\n                if (res.status === 200) {\r\n                    var turkey = res.data.Countries[177]\r\n                    setTotalConfirmed(turkey.TotalConfirmed)\r\n                    setTotalRecovered(turkey.TotalRecovered)\r\n                    setTotalDeaths(turkey.TotalDeaths)\r\n\r\n                    setNewConfirmed(turkey.NewConfirmed)\r\n                    setNewRecovered(turkey.NewRecovered)\r\n                    setNewDeaths(turkey.NewDeaths)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        axios.get(`country/turkey?from=2020-12-26T00:00:00Z&to=2021-01-05T00:00:00Z`)\r\n            .then(res => {\r\n                const yAxisCoronaCount = res.data.map(d => d.Confirmed)\r\n                setCoronaCountAr(yAxisCoronaCount)\r\n\r\n                const yAxisRecoveredCount = res.data.map(d => d.Recovered)\r\n                setCoronaRecoveredAr(yAxisRecoveredCount)\r\n\r\n                const yAxisDeathCount = res.data.map(d=> d.Deaths)\r\n                setCoronaDeathAr(yAxisDeathCount)\r\n\r\n                const yAxisActiveCount = res.data.map(d=> d.Active)\r\n                setCoronaActiveAr(yAxisActiveCount)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p>Data is loading...</p>\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"d-flex justify-content-center\" style={{marginTop: \"60\"}}>Turkey Coronavirus Tracker</h1>\r\n            <MainPage confirmedData={totalConfirmed}\r\n                recoveredData={totalRecovered}\r\n                deathData={totalDeaths}\r\n                text={alltime} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 \">\r\n                        <PieChart confirmedData={totalConfirmed}\r\n                            recoveredData={totalRecovered}\r\n                            deathData={totalDeaths}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <LineChart confirmedData={totalConfirmed}\r\n                            recoveredData={totalRecovered}\r\n                            deathData={totalDeaths} />\r\n                    </div>\r\n\r\n                    <h2 className=\"d-flex justify-content-center\" style={{ marginTop: \"50px\" }}>Today</h2>\r\n\r\n                    <MainPage confirmedData={newConfirmed}\r\n                        recoveredData={newRecovered}\r\n                        deathData={newDeaths}\r\n                        text={today} />\r\n                </div>\r\n                <h1 className=\"d-flex justify-content-center\">Last {days} Days Data</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 d-flex justify-content-center\">\r\n                        <CustomLineChart data={coronaCountAr}\r\n                            head={cases}\r\n                            headColor={casesColor} />\r\n                    </div>\r\n                    <div className=\"col-lg-6 d-flex justify-content-center\">\r\n                        <CustomLineChart data={coronaRecoveredAr}\r\n                            head={recoverd}\r\n                            headColor={recoverdCol} />\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 d-flex justify-content-center\">\r\n                        <CustomLineChart data={coronaDeathAr}\r\n                            head={death}\r\n                            headColor={deathCol} />\r\n                    </div>\r\n                    <div className=\"col-lg-6 d-flex justify-content-center\">\r\n                        <CustomLineChart data={coronaActiveAr}\r\n                            head={active}\r\n                            headColor={activeCol} />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App.jsx\"\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}